name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  FOUNDRY_PROFILE: ci
  SKIP_FORGE: 'true'   # <- flip to 'false' later to re-enable Foundry steps

jobs:
  check:
    strategy:
      fail-fast: true

    name: Foundry project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        if: ${{ env.SKIP_FORGE != 'true' }}
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Show Forge version
        if: ${{ env.SKIP_FORGE != 'true' }}
        run: |
          forge --version

      - name: Run Forge fmt
        if: ${{ env.SKIP_FORGE != 'true' }}
        run: |
          forge fmt --check
        id: fmt

      - name: Run Forge build
        if: ${{ env.SKIP_FORGE != 'true' }}
        run: |
          forge build --sizes
        id: build

      - name: Run selector clash check
        if: ${{ env.SKIP_FORGE != 'true' }}
        run: |
          chmod +x script/check-selectors.sh
          script/check-selectors.sh
        id: selectorClash

      - name: Run Forge tests
        if: ${{ env.SKIP_FORGE != 'true' }}
        run: |
          forge test -vvv
        id: test
